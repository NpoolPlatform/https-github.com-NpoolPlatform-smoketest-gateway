// Code generated by ent, DO NOT EDIT.

package testplan

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the testplan type in the database.
	Label = "test_plan"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldExecutor holds the string denoting the executor field in the database.
	FieldExecutor = "executor"
	// FieldFails holds the string denoting the fails field in the database.
	FieldFails = "fails"
	// FieldPasses holds the string denoting the passes field in the database.
	FieldPasses = "passes"
	// FieldSkips holds the string denoting the skips field in the database.
	FieldSkips = "skips"
	// FieldRunDuration holds the string denoting the run_duration field in the database.
	FieldRunDuration = "run_duration"
	// FieldDeadline holds the string denoting the deadline field in the database.
	FieldDeadline = "deadline"
	// FieldResult holds the string denoting the result field in the database.
	FieldResult = "result"
	// Table holds the table name of the testplan in the database.
	Table = "test_plans"
)

// Columns holds all SQL columns for testplan fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldState,
	FieldCreatedBy,
	FieldExecutor,
	FieldFails,
	FieldPasses,
	FieldSkips,
	FieldRunDuration,
	FieldDeadline,
	FieldResult,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultState holds the default value on creation for the "state" field.
	DefaultState string
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy func() uuid.UUID
	// DefaultExecutor holds the default value on creation for the "executor" field.
	DefaultExecutor func() uuid.UUID
	// DefaultFails holds the default value on creation for the "fails" field.
	DefaultFails uint32
	// DefaultPasses holds the default value on creation for the "passes" field.
	DefaultPasses uint32
	// DefaultSkips holds the default value on creation for the "skips" field.
	DefaultSkips uint32
	// DefaultRunDuration holds the default value on creation for the "run_duration" field.
	DefaultRunDuration uint32
	// DefaultDeadline holds the default value on creation for the "deadline" field.
	DefaultDeadline uint32
	// DefaultResult holds the default value on creation for the "result" field.
	DefaultResult string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
