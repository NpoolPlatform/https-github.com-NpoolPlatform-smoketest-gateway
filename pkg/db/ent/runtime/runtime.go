// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/detail"
	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/module"
	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/planrelatedtestcase"
	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/relatedtestcase"
	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/schema"
	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/testcase"
	"github.com/NpoolPlatform/smoketest-middleware/pkg/db/ent/testplan"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	detailMixin := schema.Detail{}.Mixin()
	detail.Policy = privacy.NewPolicies(detailMixin[0], schema.Detail{})
	detail.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := detail.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	detailMixinFields0 := detailMixin[0].Fields()
	_ = detailMixinFields0
	detailFields := schema.Detail{}.Fields()
	_ = detailFields
	// detailDescCreatedAt is the schema descriptor for created_at field.
	detailDescCreatedAt := detailMixinFields0[0].Descriptor()
	// detail.DefaultCreatedAt holds the default value on creation for the created_at field.
	detail.DefaultCreatedAt = detailDescCreatedAt.Default.(func() uint32)
	// detailDescUpdatedAt is the schema descriptor for updated_at field.
	detailDescUpdatedAt := detailMixinFields0[1].Descriptor()
	// detail.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	detail.DefaultUpdatedAt = detailDescUpdatedAt.Default.(func() uint32)
	// detail.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	detail.UpdateDefaultUpdatedAt = detailDescUpdatedAt.UpdateDefault.(func() uint32)
	// detailDescDeletedAt is the schema descriptor for deleted_at field.
	detailDescDeletedAt := detailMixinFields0[2].Descriptor()
	// detail.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	detail.DefaultDeletedAt = detailDescDeletedAt.Default.(func() uint32)
	// detailDescAppID is the schema descriptor for app_id field.
	detailDescAppID := detailFields[1].Descriptor()
	// detail.DefaultAppID holds the default value on creation for the app_id field.
	detail.DefaultAppID = detailDescAppID.Default.(func() uuid.UUID)
	// detailDescUserID is the schema descriptor for user_id field.
	detailDescUserID := detailFields[2].Descriptor()
	// detail.DefaultUserID holds the default value on creation for the user_id field.
	detail.DefaultUserID = detailDescUserID.Default.(func() uuid.UUID)
	// detailDescCoinTypeID is the schema descriptor for coin_type_id field.
	detailDescCoinTypeID := detailFields[3].Descriptor()
	// detail.DefaultCoinTypeID holds the default value on creation for the coin_type_id field.
	detail.DefaultCoinTypeID = detailDescCoinTypeID.Default.(func() uuid.UUID)
	// detailDescIoType is the schema descriptor for io_type field.
	detailDescIoType := detailFields[4].Descriptor()
	// detail.DefaultIoType holds the default value on creation for the io_type field.
	detail.DefaultIoType = detailDescIoType.Default.(string)
	// detailDescIoSubType is the schema descriptor for io_sub_type field.
	detailDescIoSubType := detailFields[5].Descriptor()
	// detail.DefaultIoSubType holds the default value on creation for the io_sub_type field.
	detail.DefaultIoSubType = detailDescIoSubType.Default.(string)
	// detailDescAmount is the schema descriptor for amount field.
	detailDescAmount := detailFields[6].Descriptor()
	// detail.DefaultAmount holds the default value on creation for the amount field.
	detail.DefaultAmount = detailDescAmount.Default.(decimal.Decimal)
	// detailDescFromCoinTypeID is the schema descriptor for from_coin_type_id field.
	detailDescFromCoinTypeID := detailFields[7].Descriptor()
	// detail.DefaultFromCoinTypeID holds the default value on creation for the from_coin_type_id field.
	detail.DefaultFromCoinTypeID = detailDescFromCoinTypeID.Default.(func() uuid.UUID)
	// detailDescCoinUsdCurrency is the schema descriptor for coin_usd_currency field.
	detailDescCoinUsdCurrency := detailFields[8].Descriptor()
	// detail.DefaultCoinUsdCurrency holds the default value on creation for the coin_usd_currency field.
	detail.DefaultCoinUsdCurrency = detailDescCoinUsdCurrency.Default.(decimal.Decimal)
	// detailDescIoExtra is the schema descriptor for io_extra field.
	detailDescIoExtra := detailFields[9].Descriptor()
	// detail.DefaultIoExtra holds the default value on creation for the io_extra field.
	detail.DefaultIoExtra = detailDescIoExtra.Default.(string)
	// detailDescFromOldID is the schema descriptor for from_old_id field.
	detailDescFromOldID := detailFields[10].Descriptor()
	// detail.DefaultFromOldID holds the default value on creation for the from_old_id field.
	detail.DefaultFromOldID = detailDescFromOldID.Default.(func() uuid.UUID)
	// detailDescID is the schema descriptor for id field.
	detailDescID := detailFields[0].Descriptor()
	// detail.DefaultID holds the default value on creation for the id field.
	detail.DefaultID = detailDescID.Default.(func() uuid.UUID)
	moduleMixin := schema.Module{}.Mixin()
	module.Policy = privacy.NewPolicies(moduleMixin[0], schema.Module{})
	module.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := module.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	moduleMixinFields0 := moduleMixin[0].Fields()
	_ = moduleMixinFields0
	moduleFields := schema.Module{}.Fields()
	_ = moduleFields
	// moduleDescCreatedAt is the schema descriptor for created_at field.
	moduleDescCreatedAt := moduleMixinFields0[0].Descriptor()
	// module.DefaultCreatedAt holds the default value on creation for the created_at field.
	module.DefaultCreatedAt = moduleDescCreatedAt.Default.(func() uint32)
	// moduleDescUpdatedAt is the schema descriptor for updated_at field.
	moduleDescUpdatedAt := moduleMixinFields0[1].Descriptor()
	// module.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	module.DefaultUpdatedAt = moduleDescUpdatedAt.Default.(func() uint32)
	// module.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	module.UpdateDefaultUpdatedAt = moduleDescUpdatedAt.UpdateDefault.(func() uint32)
	// moduleDescDeletedAt is the schema descriptor for deleted_at field.
	moduleDescDeletedAt := moduleMixinFields0[2].Descriptor()
	// module.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	module.DefaultDeletedAt = moduleDescDeletedAt.Default.(func() uint32)
	// moduleDescName is the schema descriptor for name field.
	moduleDescName := moduleFields[1].Descriptor()
	// module.DefaultName holds the default value on creation for the name field.
	module.DefaultName = moduleDescName.Default.(string)
	// moduleDescDescription is the schema descriptor for description field.
	moduleDescDescription := moduleFields[2].Descriptor()
	// module.DefaultDescription holds the default value on creation for the description field.
	module.DefaultDescription = moduleDescDescription.Default.(string)
	// moduleDescID is the schema descriptor for id field.
	moduleDescID := moduleFields[0].Descriptor()
	// module.DefaultID holds the default value on creation for the id field.
	module.DefaultID = moduleDescID.Default.(func() uuid.UUID)
	planrelatedtestcaseMixin := schema.PlanRelatedTestCase{}.Mixin()
	planrelatedtestcase.Policy = privacy.NewPolicies(planrelatedtestcaseMixin[0], schema.PlanRelatedTestCase{})
	planrelatedtestcase.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := planrelatedtestcase.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	planrelatedtestcaseMixinFields0 := planrelatedtestcaseMixin[0].Fields()
	_ = planrelatedtestcaseMixinFields0
	planrelatedtestcaseFields := schema.PlanRelatedTestCase{}.Fields()
	_ = planrelatedtestcaseFields
	// planrelatedtestcaseDescCreatedAt is the schema descriptor for created_at field.
	planrelatedtestcaseDescCreatedAt := planrelatedtestcaseMixinFields0[0].Descriptor()
	// planrelatedtestcase.DefaultCreatedAt holds the default value on creation for the created_at field.
	planrelatedtestcase.DefaultCreatedAt = planrelatedtestcaseDescCreatedAt.Default.(func() uint32)
	// planrelatedtestcaseDescUpdatedAt is the schema descriptor for updated_at field.
	planrelatedtestcaseDescUpdatedAt := planrelatedtestcaseMixinFields0[1].Descriptor()
	// planrelatedtestcase.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	planrelatedtestcase.DefaultUpdatedAt = planrelatedtestcaseDescUpdatedAt.Default.(func() uint32)
	// planrelatedtestcase.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	planrelatedtestcase.UpdateDefaultUpdatedAt = planrelatedtestcaseDescUpdatedAt.UpdateDefault.(func() uint32)
	// planrelatedtestcaseDescDeletedAt is the schema descriptor for deleted_at field.
	planrelatedtestcaseDescDeletedAt := planrelatedtestcaseMixinFields0[2].Descriptor()
	// planrelatedtestcase.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	planrelatedtestcase.DefaultDeletedAt = planrelatedtestcaseDescDeletedAt.Default.(func() uint32)
	// planrelatedtestcaseDescTestPlanID is the schema descriptor for test_plan_id field.
	planrelatedtestcaseDescTestPlanID := planrelatedtestcaseFields[1].Descriptor()
	// planrelatedtestcase.DefaultTestPlanID holds the default value on creation for the test_plan_id field.
	planrelatedtestcase.DefaultTestPlanID = planrelatedtestcaseDescTestPlanID.Default.(func() uuid.UUID)
	// planrelatedtestcaseDescTestCaseID is the schema descriptor for test_case_id field.
	planrelatedtestcaseDescTestCaseID := planrelatedtestcaseFields[2].Descriptor()
	// planrelatedtestcase.DefaultTestCaseID holds the default value on creation for the test_case_id field.
	planrelatedtestcase.DefaultTestCaseID = planrelatedtestcaseDescTestCaseID.Default.(func() uuid.UUID)
	// planrelatedtestcaseDescTestCaseOutput is the schema descriptor for test_case_output field.
	planrelatedtestcaseDescTestCaseOutput := planrelatedtestcaseFields[3].Descriptor()
	// planrelatedtestcase.DefaultTestCaseOutput holds the default value on creation for the test_case_output field.
	planrelatedtestcase.DefaultTestCaseOutput = planrelatedtestcaseDescTestCaseOutput.Default.(string)
	// planrelatedtestcaseDescDescription is the schema descriptor for description field.
	planrelatedtestcaseDescDescription := planrelatedtestcaseFields[4].Descriptor()
	// planrelatedtestcase.DefaultDescription holds the default value on creation for the description field.
	planrelatedtestcase.DefaultDescription = planrelatedtestcaseDescDescription.Default.(string)
	// planrelatedtestcaseDescTestUserID is the schema descriptor for test_user_id field.
	planrelatedtestcaseDescTestUserID := planrelatedtestcaseFields[5].Descriptor()
	// planrelatedtestcase.DefaultTestUserID holds the default value on creation for the test_user_id field.
	planrelatedtestcase.DefaultTestUserID = planrelatedtestcaseDescTestUserID.Default.(func() uuid.UUID)
	// planrelatedtestcaseDescRunDuration is the schema descriptor for run_duration field.
	planrelatedtestcaseDescRunDuration := planrelatedtestcaseFields[6].Descriptor()
	// planrelatedtestcase.DefaultRunDuration holds the default value on creation for the run_duration field.
	planrelatedtestcase.DefaultRunDuration = planrelatedtestcaseDescRunDuration.Default.(uint32)
	// planrelatedtestcaseDescTestCaseResult is the schema descriptor for test_case_result field.
	planrelatedtestcaseDescTestCaseResult := planrelatedtestcaseFields[7].Descriptor()
	// planrelatedtestcase.DefaultTestCaseResult holds the default value on creation for the test_case_result field.
	planrelatedtestcase.DefaultTestCaseResult = planrelatedtestcaseDescTestCaseResult.Default.(string)
	// planrelatedtestcaseDescID is the schema descriptor for id field.
	planrelatedtestcaseDescID := planrelatedtestcaseFields[0].Descriptor()
	// planrelatedtestcase.DefaultID holds the default value on creation for the id field.
	planrelatedtestcase.DefaultID = planrelatedtestcaseDescID.Default.(func() uuid.UUID)
	relatedtestcaseMixin := schema.RelatedTestCase{}.Mixin()
	relatedtestcase.Policy = privacy.NewPolicies(relatedtestcaseMixin[0], schema.RelatedTestCase{})
	relatedtestcase.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := relatedtestcase.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	relatedtestcaseMixinFields0 := relatedtestcaseMixin[0].Fields()
	_ = relatedtestcaseMixinFields0
	relatedtestcaseFields := schema.RelatedTestCase{}.Fields()
	_ = relatedtestcaseFields
	// relatedtestcaseDescCreatedAt is the schema descriptor for created_at field.
	relatedtestcaseDescCreatedAt := relatedtestcaseMixinFields0[0].Descriptor()
	// relatedtestcase.DefaultCreatedAt holds the default value on creation for the created_at field.
	relatedtestcase.DefaultCreatedAt = relatedtestcaseDescCreatedAt.Default.(func() uint32)
	// relatedtestcaseDescUpdatedAt is the schema descriptor for updated_at field.
	relatedtestcaseDescUpdatedAt := relatedtestcaseMixinFields0[1].Descriptor()
	// relatedtestcase.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	relatedtestcase.DefaultUpdatedAt = relatedtestcaseDescUpdatedAt.Default.(func() uint32)
	// relatedtestcase.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	relatedtestcase.UpdateDefaultUpdatedAt = relatedtestcaseDescUpdatedAt.UpdateDefault.(func() uint32)
	// relatedtestcaseDescDeletedAt is the schema descriptor for deleted_at field.
	relatedtestcaseDescDeletedAt := relatedtestcaseMixinFields0[2].Descriptor()
	// relatedtestcase.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	relatedtestcase.DefaultDeletedAt = relatedtestcaseDescDeletedAt.Default.(func() uint32)
	// relatedtestcaseDescCondType is the schema descriptor for cond_type field.
	relatedtestcaseDescCondType := relatedtestcaseFields[1].Descriptor()
	// relatedtestcase.DefaultCondType holds the default value on creation for the cond_type field.
	relatedtestcase.DefaultCondType = relatedtestcaseDescCondType.Default.(string)
	// relatedtestcaseDescTestCaseID is the schema descriptor for test_case_id field.
	relatedtestcaseDescTestCaseID := relatedtestcaseFields[2].Descriptor()
	// relatedtestcase.DefaultTestCaseID holds the default value on creation for the test_case_id field.
	relatedtestcase.DefaultTestCaseID = relatedtestcaseDescTestCaseID.Default.(func() uuid.UUID)
	// relatedtestcaseDescRelatedTestCaseID is the schema descriptor for related_test_case_id field.
	relatedtestcaseDescRelatedTestCaseID := relatedtestcaseFields[3].Descriptor()
	// relatedtestcase.DefaultRelatedTestCaseID holds the default value on creation for the related_test_case_id field.
	relatedtestcase.DefaultRelatedTestCaseID = relatedtestcaseDescRelatedTestCaseID.Default.(func() uuid.UUID)
	// relatedtestcaseDescArgumentsTransfer is the schema descriptor for arguments_transfer field.
	relatedtestcaseDescArgumentsTransfer := relatedtestcaseFields[4].Descriptor()
	// relatedtestcase.DefaultArgumentsTransfer holds the default value on creation for the arguments_transfer field.
	relatedtestcase.DefaultArgumentsTransfer = relatedtestcaseDescArgumentsTransfer.Default.(string)
	// relatedtestcaseDescIndex is the schema descriptor for index field.
	relatedtestcaseDescIndex := relatedtestcaseFields[5].Descriptor()
	// relatedtestcase.DefaultIndex holds the default value on creation for the index field.
	relatedtestcase.DefaultIndex = relatedtestcaseDescIndex.Default.(uint32)
	// relatedtestcaseDescID is the schema descriptor for id field.
	relatedtestcaseDescID := relatedtestcaseFields[0].Descriptor()
	// relatedtestcase.DefaultID holds the default value on creation for the id field.
	relatedtestcase.DefaultID = relatedtestcaseDescID.Default.(func() uuid.UUID)
	testcaseMixin := schema.TestCase{}.Mixin()
	testcase.Policy = privacy.NewPolicies(testcaseMixin[0], schema.TestCase{})
	testcase.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := testcase.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	testcaseMixinFields0 := testcaseMixin[0].Fields()
	_ = testcaseMixinFields0
	testcaseFields := schema.TestCase{}.Fields()
	_ = testcaseFields
	// testcaseDescCreatedAt is the schema descriptor for created_at field.
	testcaseDescCreatedAt := testcaseMixinFields0[0].Descriptor()
	// testcase.DefaultCreatedAt holds the default value on creation for the created_at field.
	testcase.DefaultCreatedAt = testcaseDescCreatedAt.Default.(func() uint32)
	// testcaseDescUpdatedAt is the schema descriptor for updated_at field.
	testcaseDescUpdatedAt := testcaseMixinFields0[1].Descriptor()
	// testcase.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	testcase.DefaultUpdatedAt = testcaseDescUpdatedAt.Default.(func() uint32)
	// testcase.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	testcase.UpdateDefaultUpdatedAt = testcaseDescUpdatedAt.UpdateDefault.(func() uint32)
	// testcaseDescDeletedAt is the schema descriptor for deleted_at field.
	testcaseDescDeletedAt := testcaseMixinFields0[2].Descriptor()
	// testcase.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	testcase.DefaultDeletedAt = testcaseDescDeletedAt.Default.(func() uint32)
	// testcaseDescName is the schema descriptor for name field.
	testcaseDescName := testcaseFields[1].Descriptor()
	// testcase.DefaultName holds the default value on creation for the name field.
	testcase.DefaultName = testcaseDescName.Default.(string)
	// testcaseDescDescription is the schema descriptor for description field.
	testcaseDescDescription := testcaseFields[2].Descriptor()
	// testcase.DefaultDescription holds the default value on creation for the description field.
	testcase.DefaultDescription = testcaseDescDescription.Default.(string)
	// testcaseDescModuleID is the schema descriptor for module_id field.
	testcaseDescModuleID := testcaseFields[3].Descriptor()
	// testcase.DefaultModuleID holds the default value on creation for the module_id field.
	testcase.DefaultModuleID = testcaseDescModuleID.Default.(func() uuid.UUID)
	// testcaseDescAPIID is the schema descriptor for api_id field.
	testcaseDescAPIID := testcaseFields[4].Descriptor()
	// testcase.DefaultAPIID holds the default value on creation for the api_id field.
	testcase.DefaultAPIID = testcaseDescAPIID.Default.(func() uuid.UUID)
	// testcaseDescArguments is the schema descriptor for arguments field.
	testcaseDescArguments := testcaseFields[5].Descriptor()
	// testcase.DefaultArguments holds the default value on creation for the arguments field.
	testcase.DefaultArguments = testcaseDescArguments.Default.(string)
	// testcaseDescExpectationResult is the schema descriptor for expectation_result field.
	testcaseDescExpectationResult := testcaseFields[6].Descriptor()
	// testcase.DefaultExpectationResult holds the default value on creation for the expectation_result field.
	testcase.DefaultExpectationResult = testcaseDescExpectationResult.Default.(string)
	// testcaseDescTestCaseType is the schema descriptor for test_case_type field.
	testcaseDescTestCaseType := testcaseFields[7].Descriptor()
	// testcase.DefaultTestCaseType holds the default value on creation for the test_case_type field.
	testcase.DefaultTestCaseType = testcaseDescTestCaseType.Default.(string)
	// testcaseDescDeprecated is the schema descriptor for deprecated field.
	testcaseDescDeprecated := testcaseFields[8].Descriptor()
	// testcase.DefaultDeprecated holds the default value on creation for the deprecated field.
	testcase.DefaultDeprecated = testcaseDescDeprecated.Default.(bool)
	// testcaseDescID is the schema descriptor for id field.
	testcaseDescID := testcaseFields[0].Descriptor()
	// testcase.DefaultID holds the default value on creation for the id field.
	testcase.DefaultID = testcaseDescID.Default.(func() uuid.UUID)
	testplanMixin := schema.TestPlan{}.Mixin()
	testplan.Policy = privacy.NewPolicies(testplanMixin[0], schema.TestPlan{})
	testplan.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := testplan.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	testplanMixinFields0 := testplanMixin[0].Fields()
	_ = testplanMixinFields0
	testplanFields := schema.TestPlan{}.Fields()
	_ = testplanFields
	// testplanDescCreatedAt is the schema descriptor for created_at field.
	testplanDescCreatedAt := testplanMixinFields0[0].Descriptor()
	// testplan.DefaultCreatedAt holds the default value on creation for the created_at field.
	testplan.DefaultCreatedAt = testplanDescCreatedAt.Default.(func() uint32)
	// testplanDescUpdatedAt is the schema descriptor for updated_at field.
	testplanDescUpdatedAt := testplanMixinFields0[1].Descriptor()
	// testplan.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	testplan.DefaultUpdatedAt = testplanDescUpdatedAt.Default.(func() uint32)
	// testplan.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	testplan.UpdateDefaultUpdatedAt = testplanDescUpdatedAt.UpdateDefault.(func() uint32)
	// testplanDescDeletedAt is the schema descriptor for deleted_at field.
	testplanDescDeletedAt := testplanMixinFields0[2].Descriptor()
	// testplan.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	testplan.DefaultDeletedAt = testplanDescDeletedAt.Default.(func() uint32)
	// testplanDescName is the schema descriptor for name field.
	testplanDescName := testplanFields[1].Descriptor()
	// testplan.DefaultName holds the default value on creation for the name field.
	testplan.DefaultName = testplanDescName.Default.(string)
	// testplanDescState is the schema descriptor for state field.
	testplanDescState := testplanFields[2].Descriptor()
	// testplan.DefaultState holds the default value on creation for the state field.
	testplan.DefaultState = testplanDescState.Default.(string)
	// testplanDescOwnerID is the schema descriptor for owner_id field.
	testplanDescOwnerID := testplanFields[3].Descriptor()
	// testplan.DefaultOwnerID holds the default value on creation for the owner_id field.
	testplan.DefaultOwnerID = testplanDescOwnerID.Default.(func() uuid.UUID)
	// testplanDescResponsibleUserID is the schema descriptor for responsible_user_id field.
	testplanDescResponsibleUserID := testplanFields[4].Descriptor()
	// testplan.DefaultResponsibleUserID holds the default value on creation for the responsible_user_id field.
	testplan.DefaultResponsibleUserID = testplanDescResponsibleUserID.Default.(func() uuid.UUID)
	// testplanDescFailedTestCaseCount is the schema descriptor for failed_test_case_count field.
	testplanDescFailedTestCaseCount := testplanFields[5].Descriptor()
	// testplan.DefaultFailedTestCaseCount holds the default value on creation for the failed_test_case_count field.
	testplan.DefaultFailedTestCaseCount = testplanDescFailedTestCaseCount.Default.(uint32)
	// testplanDescPassedTestCaseCount is the schema descriptor for passed_test_case_count field.
	testplanDescPassedTestCaseCount := testplanFields[6].Descriptor()
	// testplan.DefaultPassedTestCaseCount holds the default value on creation for the passed_test_case_count field.
	testplan.DefaultPassedTestCaseCount = testplanDescPassedTestCaseCount.Default.(uint32)
	// testplanDescSkippedTestCaseCount is the schema descriptor for skipped_test_case_count field.
	testplanDescSkippedTestCaseCount := testplanFields[7].Descriptor()
	// testplan.DefaultSkippedTestCaseCount holds the default value on creation for the skipped_test_case_count field.
	testplan.DefaultSkippedTestCaseCount = testplanDescSkippedTestCaseCount.Default.(uint32)
	// testplanDescRunDuration is the schema descriptor for run_duration field.
	testplanDescRunDuration := testplanFields[8].Descriptor()
	// testplan.DefaultRunDuration holds the default value on creation for the run_duration field.
	testplan.DefaultRunDuration = testplanDescRunDuration.Default.(uint32)
	// testplanDescDeadline is the schema descriptor for deadline field.
	testplanDescDeadline := testplanFields[9].Descriptor()
	// testplan.DefaultDeadline holds the default value on creation for the deadline field.
	testplan.DefaultDeadline = testplanDescDeadline.Default.(uint32)
	// testplanDescTestResult is the schema descriptor for test_result field.
	testplanDescTestResult := testplanFields[10].Descriptor()
	// testplan.DefaultTestResult holds the default value on creation for the test_result field.
	testplan.DefaultTestResult = testplanDescTestResult.Default.(string)
	// testplanDescID is the schema descriptor for id field.
	testplanDescID := testplanFields[0].Descriptor()
	// testplan.DefaultID holds the default value on creation for the id field.
	testplan.DefaultID = testplanDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.11.2"                                         // Version of ent codegen.
	Sum     = "h1:UM2/BUhF2FfsxPHRxLjQbhqJNaDdVlOwNIAMLs2jyto=" // Sum of ent codegen.
)
